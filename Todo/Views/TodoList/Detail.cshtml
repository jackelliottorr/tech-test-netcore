@using Todo.Controllers
@using Todo.Data
@using Todo.Data.Entities
@using Todo.GravatarConnector
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@inject IProfileService ProfileService
@inject ApplicationDbContext dbContext

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <div class="form-check">
        <input class="form-check-input" type="checkbox" id="toggleCompleted" onchange="toggleCompletedTodoItems()">
        <label class="form-check-label" id="lblToggleCompleted" for="toggleCompleted">Hide completed todo items</label>
    </div>

    <button id="sortByRank" class="btn btn-primary">Sort by Rank</button>

    <ul class="list-group">
        @foreach (var item in Model.Items.OrderBy(x => x.Importance))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            var stringRank = item.Rank.GetValueOrDefault() > 0 ? $"{item.Rank.Value}." : "-";

            <li class="list-group-item @contextualClass"
                data-completed="@(item.IsDone ? "true" : "false")"
                data-rank="@item.Rank">
                
                <div class="row">

                    <div class="col-md-2">
                        <span>@stringRank</span>
                    </div>

                    <div class="col-md-6">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @{
                                var imageSrc = "https://www.gravatar.com/avatar/@gravatarhash?s=30";
                                var displayName = item.ResponsibleParty.UserName;
                                var gravatarhash = Gravatar.GetSHA256Hash(item.ResponsibleParty.Email);
                                var profile = await ProfileService.GetProfileAsync(gravatarhash);
                                if (profile != null)
                                {
                                    displayName = $"{profile.DisplayName} ({item.ResponsibleParty.Email})";
                                    imageSrc = profile.AvatarUrl;
                                };
                            }

                            @displayName

                            <img src="@imageSrc" />
                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>

    <div class="mb-3">
        <a class="btn btn-success" asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
            <strong>Add New Item</strong>
        </a>
    </div>

    @*<partial name="_CreateTodoItem" model="new Todo.Models.TodoItems.TodoItemCreateFields()" />
    <button id="btnShowCreateForm">Add New Item</button> *@
</div>

@section Scripts
{
    <script src="~/js/hideCompletedTodoItems.js"></script>
    <script src="~/js/orderByRank.js"></script>
    @* <script src="~/js/createItem.js"></script> *@
}